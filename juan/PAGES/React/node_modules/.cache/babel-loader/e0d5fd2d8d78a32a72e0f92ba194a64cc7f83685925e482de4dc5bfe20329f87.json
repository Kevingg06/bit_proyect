{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\isaac\\\\OneDrive\\\\Documentos\\\\GitHub\\\\linkedin_clone\\\\juan\\\\PAGES\\\\React\\\\src\\\\componentes\\\\Posteo.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Posteo = () => {\n  _s();\n  const [posteos, setPosteos] = useState([]); // Estado para almacenar los posteos\n\n  // Estilos para los elementos\n  const tarjeta = {\n    width: '88.857%',\n    height: 'auto',\n    // Se ajusta al contenido\n    margin: '3% auto',\n    display: 'flex',\n    flexDirection: 'column',\n    backgroundColor: '#eeeded',\n    alignItems: 'center',\n    borderRadius: '20px',\n    boxShadow: '4px 4px 10px 6px rgba(0, 0, 0, 0.2)',\n    padding: '2%' // Añadir algo de padding para asegurar que no se pegue a los bordes\n  };\n  const estiloTitulo = {\n    marginBottom: '2%',\n    marginTop: '2%',\n    fontSize: '30px'\n  };\n  const estiloDescripcion = {\n    fontSize: '20px',\n    marginBottom: '2%',\n    paddingLeft: '4%',\n    paddingRight: '4%',\n    textAlign: 'center'\n  };\n  const estiloImagen = {\n    width: '95%',\n    height: 'auto',\n    // Se ajusta al tamaño original de la imagen\n    borderRadius: '20px',\n    marginTop: '3%',\n    marginBottom: '3%'\n  };\n\n  // Función para obtener los posteos desde la base de datos\n  const fetchPosteos = async () => {\n    try {\n      const response = await fetch('https://api.tuservidor.com/descripcion'); // Cambia la URL según tu API\n      if (!response.ok) {\n        throw new Error('Error al obtener los posteos');\n      }\n      const data = await response.json();\n      setPosteos(data); // Almacena los datos obtenidos en el estado\n    } catch (error) {\n      console.error('Error al cargar los posteos:', error);\n    }\n  };\n\n  // Llama a la función fetchPosteos cuando el componente se monta\n  useEffect(() => {\n    fetchPosteos();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: posteos.map(posteo => /*#__PURE__*/_jsxDEV(\"div\", {\n      style: tarjeta,\n      children: [\" \", /*#__PURE__*/_jsxDEV(\"h4\", {\n        style: estiloTitulo,\n        children: posteo.titulo\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        style: estiloDescripcion,\n        children: posteo.texto\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: posteo.image,\n        alt: posteo.titulo,\n        style: estiloImagen\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 11\n      }, this)]\n    }, posteo.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n};\n_s(Posteo, \"6VsYbIxUB/AFCUIqoa4HZElyDNk=\");\n_c = Posteo;\nvar _c;\n$RefreshReg$(_c, \"Posteo\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","Posteo","_s","posteos","setPosteos","tarjeta","width","height","margin","display","flexDirection","backgroundColor","alignItems","borderRadius","boxShadow","padding","estiloTitulo","marginBottom","marginTop","fontSize","estiloDescripcion","paddingLeft","paddingRight","textAlign","estiloImagen","fetchPosteos","response","fetch","ok","Error","data","json","error","console","children","map","posteo","style","titulo","fileName","_jsxFileName","lineNumber","columnNumber","texto","src","image","alt","id","_c","$RefreshReg$"],"sources":["C:/Users/isaac/OneDrive/Documentos/GitHub/linkedin_clone/juan/PAGES/React/src/componentes/Posteo.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\n\r\nexport const Posteo = () => {\r\n  const [posteos, setPosteos] = useState([]); // Estado para almacenar los posteos\r\n\r\n  // Estilos para los elementos\r\n  const tarjeta = {\r\n    width: '88.857%',\r\n    height: 'auto', // Se ajusta al contenido\r\n    margin: '3% auto',\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    backgroundColor: '#eeeded',\r\n    alignItems: 'center',\r\n    borderRadius: '20px',\r\n    boxShadow: '4px 4px 10px 6px rgba(0, 0, 0, 0.2)',\r\n    padding: '2%', // Añadir algo de padding para asegurar que no se pegue a los bordes\r\n  };\r\n\r\n  const estiloTitulo = {\r\n    marginBottom: '2%',\r\n    marginTop: '2%',\r\n    fontSize: '30px',\r\n  };\r\n\r\n  const estiloDescripcion = {\r\n    fontSize: '20px',\r\n    marginBottom: '2%',\r\n    paddingLeft: '4%',\r\n    paddingRight: '4%',\r\n    textAlign: 'center',\r\n  };\r\n\r\n  const estiloImagen = {\r\n    width: '95%',\r\n    height: 'auto', // Se ajusta al tamaño original de la imagen\r\n    borderRadius: '20px',\r\n    marginTop: '3%',\r\n    marginBottom: '3%',\r\n  };\r\n\r\n  // Función para obtener los posteos desde la base de datos\r\n  const fetchPosteos = async () => {\r\n    try {\r\n      const response = await fetch('https://api.tuservidor.com/descripcion'); // Cambia la URL según tu API\r\n      if (!response.ok) {\r\n        throw new Error('Error al obtener los posteos');\r\n      }\r\n      const data = await response.json();\r\n      setPosteos(data); // Almacena los datos obtenidos en el estado\r\n    } catch (error) {\r\n      console.error('Error al cargar los posteos:', error);\r\n    }\r\n  };\r\n\r\n  // Llama a la función fetchPosteos cuando el componente se monta\r\n  useEffect(() => {\r\n    fetchPosteos();\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      {posteos.map((posteo) => (\r\n        <div key={posteo.id} style={tarjeta}> {/* Asegúrate de tener un ID único en cada posteo */}\r\n          <h4 style={estiloTitulo}>{posteo.titulo}</h4>\r\n          <p style={estiloDescripcion}>{posteo.texto}</p>\r\n          <img src={posteo.image} alt={posteo.titulo} style={estiloImagen} />\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
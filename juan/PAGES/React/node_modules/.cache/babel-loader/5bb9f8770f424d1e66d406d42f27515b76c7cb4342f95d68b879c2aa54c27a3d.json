{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\isaac\\\\OneDrive\\\\Documentos\\\\GitHub\\\\linkedin_clone\\\\juan\\\\PAGES\\\\React\\\\src\\\\componentes\\\\TitulosExt.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst titulo = {\n  display: 'inline',\n  justifyContent: 'space-between',\n  fontSize: '30px'\n};\nconst estiloTexto = {\n  fontSize: '25px',\n  whiteSpace: 'pre-line',\n  width: '100%',\n  display: 'block',\n  wordWrap: 'break-word'\n};\nexport const TitulosExt = () => {\n  _s();\n  const [texto, setTexto] = useState('Todavía no se han añadido títulos');\n  useEffect(() => {\n    async function obtenerTextoDeAPI() {\n      try {\n        const respuesta = await fetch('https://api.ejemplo.com/usuario');\n        const datos = await respuesta.json();\n        setTexto(datos.titulos); // Suponiendo que la respuesta de la API tiene una propiedad \"nombre\"\n      } catch (error) {\n        console.error('Error al obtener los títulos del usuario:', error);\n      }\n    }\n    obtenerTextoDeAPI();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n      style: titulo,\n      children: \"T\\xECtulos\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      style: estiloTexto,\n      children: texto\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 9\n  }, this);\n};\n_s(TitulosExt, \"+Whhba6+ZJBvC/Ta1FsoqggeAH4=\");\n_c = TitulosExt;\nvar _c;\n$RefreshReg$(_c, \"TitulosExt\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","titulo","display","justifyContent","fontSize","estiloTexto","whiteSpace","width","wordWrap","TitulosExt","_s","texto","setTexto","obtenerTextoDeAPI","respuesta","fetch","datos","json","titulos","error","console","children","style","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/isaac/OneDrive/Documentos/GitHub/linkedin_clone/juan/PAGES/React/src/componentes/TitulosExt.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\n\r\nconst titulo = {\r\n    display: 'inline',\r\n    justifyContent: 'space-between',\r\n    fontSize: '30px'\r\n};\r\n\r\nconst estiloTexto = {\r\n    fontSize: '25px',\r\n    whiteSpace: 'pre-line',\r\n    width: '100%',\r\n    display: 'block',\r\n    wordWrap: 'break-word'\r\n};\r\n\r\n\r\n\r\nexport const TitulosExt = () => {\r\n    const [texto, setTexto] = useState('Todavía no se han añadido títulos');\r\n\r\n    useEffect(() => {\r\n        async function obtenerTextoDeAPI() {\r\n            try {\r\n                const respuesta = await fetch('https://api.ejemplo.com/usuario');\r\n                const datos = await respuesta.json();\r\n                setTexto(datos.titulos); // Suponiendo que la respuesta de la API tiene una propiedad \"nombre\"\r\n            } catch (error) {\r\n                console.error('Error al obtener los títulos del usuario:', error);\r\n            }\r\n        }\r\n\r\n        obtenerTextoDeAPI();\r\n    }, []);\r\n\r\n    return (\r\n        <div>\r\n            <h4 style={titulo}>Tìtulos</h4>\r\n            <p style={estiloTexto}>{texto}</p>\r\n        </div>\r\n    );\r\n};\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAGnD,MAAMC,MAAM,GAAG;EACXC,OAAO,EAAE,QAAQ;EACjBC,cAAc,EAAE,eAAe;EAC/BC,QAAQ,EAAE;AACd,CAAC;AAED,MAAMC,WAAW,GAAG;EAChBD,QAAQ,EAAE,MAAM;EAChBE,UAAU,EAAE,UAAU;EACtBC,KAAK,EAAE,MAAM;EACbL,OAAO,EAAE,OAAO;EAChBM,QAAQ,EAAE;AACd,CAAC;AAID,OAAO,MAAMC,UAAU,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC5B,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGf,QAAQ,CAAC,mCAAmC,CAAC;EAEvEC,SAAS,CAAC,MAAM;IACZ,eAAee,iBAAiBA,CAAA,EAAG;MAC/B,IAAI;QACA,MAAMC,SAAS,GAAG,MAAMC,KAAK,CAAC,iCAAiC,CAAC;QAChE,MAAMC,KAAK,GAAG,MAAMF,SAAS,CAACG,IAAI,CAAC,CAAC;QACpCL,QAAQ,CAACI,KAAK,CAACE,OAAO,CAAC,CAAC,CAAC;MAC7B,CAAC,CAAC,OAAOC,KAAK,EAAE;QACZC,OAAO,CAACD,KAAK,CAAC,2CAA2C,EAAEA,KAAK,CAAC;MACrE;IACJ;IAEAN,iBAAiB,CAAC,CAAC;EACvB,CAAC,EAAE,EAAE,CAAC;EAEN,oBACIb,OAAA;IAAAqB,QAAA,gBACIrB,OAAA;MAAIsB,KAAK,EAAErB,MAAO;MAAAoB,QAAA,EAAC;IAAO;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC/B1B,OAAA;MAAGsB,KAAK,EAAEjB,WAAY;MAAAgB,QAAA,EAAEV;IAAK;MAAAY,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACjC,CAAC;AAEd,CAAC;AAAChB,EAAA,CAvBWD,UAAU;AAAAkB,EAAA,GAAVlB,UAAU;AAAA,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\isaac\\\\OneDrive\\\\Documentos\\\\GitHub\\\\linkedin_clone\\\\juan\\\\PAGES\\\\React\\\\src\\\\componentes\\\\Login.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef } from 'react';\nimport styles from './Login.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Login() {\n  _s();\n  const passwordInputRef = useRef(null);\n  const mostrarContraRef = useRef(null);\n  const emailRef = useRef(null);\n  const ingresarRef = useRef(null);\n  const formularioRef = useRef(null); // Nueva referencia al formulario\n\n  // Definir las funciones fuera del useEffect\n  const mostrarContraseña = () => {\n    const passwordInput = passwordInputRef.current;\n    const mostrarContra = mostrarContraRef.current;\n    if (passwordInput.type === \"password\") {\n      passwordInput.type = \"text\";\n      mostrarContra.textContent = \"Ocultar\";\n    } else {\n      passwordInput.type = \"password\";\n      mostrarContra.textContent = \"Mostrar\";\n    }\n  };\n  const enviarDatos = () => {\n    const emailUsuario = emailRef.current.value;\n    const contraseñaUsuario = passwordInputRef.current.value;\n    var datos = {\n      email: emailUsuario,\n      contraseña: contraseñaUsuario\n    };\n    const inputs = formularioRef.current.getElementsByTagName(\"input\"); // Usar ref para el formulario\n\n    if (datosVacios(inputs) && validarDatos(inputs) && validarContraseña(contraseñaUsuario)) {\n      console.log('Todos los datos son correctos. Enviando datos...');\n      fetch('http://localhost:5500/login', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(datos)\n      }).then(response => {\n        if (!response.ok) {\n          throw new Error('La solicitud no fue exitosa');\n        }\n        return response.json();\n      }).then(data => {\n        console.log('Respuesta de la API:', data);\n        window.location.href = 'http://localhost:3000/';\n      }).catch(error => {\n        console.error('Error al enviar datos a la API:', error);\n        alert(\"El envío de datos a la API falló. Revise que los datos ingresados sean correctos\");\n      });\n    }\n  };\n  const datosVacios = inputs => {\n    for (var i = 0; i < inputs.length; i++) {\n      if (inputs[i].value.trim() === \"\") {\n        console.error(\"Hay campos vacios\");\n        alert(\"Por favor, llene todos los campos.\");\n        return false;\n      }\n    }\n    return true;\n  };\n  const validarDatos = inputs => {\n    var regex = /[,*()]/g;\n    for (var i = 0; i < inputs.length; i++) {\n      var inputValue = inputs[i].value.trim();\n      if (regex.test(inputValue)) {\n        console.error(\"El texto no puede contener los siguientes caracteres: '[', ']', '*', '(', ')'\");\n        alert(\"El texto no puede contener los siguientes caracteres: '[', ']', '*', '(', ')'\");\n        return false;\n      }\n    }\n    console.log(\"Todos los textos son válidos.\");\n    return true;\n  };\n  const validarContraseña = contraseña => {\n    var expresionRegular = /^[a-zA-Z0-9]{8,20}$/;\n    if (expresionRegular.test(contraseña)) {\n      console.log('La contraseña es válida.');\n      return true;\n    } else {\n      console.error('La contraseña no es válida. Debe contener solo letras y números, y tener entre 8 y 20 caracteres.');\n      alert('La contraseña no es válida. Debe contener solo letras y números, y tener entre 8 y 20 caracteres.');\n      return false;\n    }\n  };\n  useEffect(() => {\n    const mostrarContra = mostrarContraRef.current;\n    const ingresarButton = ingresarRef.current;\n\n    // Añadir event listeners\n    mostrarContra.addEventListener(\"click\", mostrarContraseña);\n    ingresarButton.addEventListener(\"click\", enviarDatos);\n\n    // Quitar event listeners al desmontar\n    return () => {\n      mostrarContra.removeEventListener(\"click\", mostrarContraseña);\n      ingresarButton.removeEventListener(\"click\", enviarDatos);\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.login,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      id: styles.fondo_2\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: styles.fondo_1\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.pantalla,\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"INICIAR SESI\\xD3N\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 9\n      }, this), \"  \", /*#__PURE__*/_jsxDEV(\"form\", {\n        id: styles.formulario,\n        ref: formularioRef,\n        children: [\" \", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          id: styles.email,\n          ref: emailRef,\n          placeholder: \"INGRESA TU EMAIL\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 11\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          id: styles.contraseña,\n          ref: passwordInputRef,\n          placeholder: \"INGRESA TU CONTRASE\\xD1A\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 11\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          id: styles.mostrarContra,\n          ref: mostrarContraRef,\n          children: \"Mostrar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 11\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"a\", {\n          id: styles.olvido,\n          href: \"#\",\n          children: \"\\xBFOlvidaste tu contrase\\xF1a?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 11\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"a\", {\n          id: styles.register,\n          href: \"#\",\n          children: \"\\xBFNo ten\\xE9s cuenta? Registrate\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 11\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          id: styles.ingresar,\n          ref: ingresarRef,\n          children: \"Entrar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 11\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          id: styles.google,\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: \"/logo_google.jpg\",\n            alt: \"makako\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 13\n          }, this), \"INGRESAR CON GOOGLE\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 121,\n    columnNumber: 5\n  }, this);\n}\n_s(Login, \"zFPzfHsF8FZ1b9m5awfS4NUm4Yo=\");\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useEffect","useRef","styles","jsxDEV","_jsxDEV","Login","_s","passwordInputRef","mostrarContraRef","emailRef","ingresarRef","formularioRef","mostrarContraseña","passwordInput","current","mostrarContra","type","textContent","enviarDatos","emailUsuario","value","contraseñaUsuario","datos","email","contraseña","inputs","getElementsByTagName","datosVacios","validarDatos","validarContraseña","console","log","fetch","method","headers","body","JSON","stringify","then","response","ok","Error","json","data","window","location","href","catch","error","alert","i","length","trim","regex","inputValue","test","expresionRegular","ingresarButton","addEventListener","removeEventListener","className","login","children","id","fondo_2","fileName","_jsxFileName","lineNumber","columnNumber","fondo_1","pantalla","formulario","ref","placeholder","olvido","register","ingresar","google","src","alt","_c","$RefreshReg$"],"sources":["C:/Users/isaac/OneDrive/Documentos/GitHub/linkedin_clone/juan/PAGES/React/src/componentes/Login.jsx"],"sourcesContent":["import React, { useEffect, useRef } from 'react';\r\nimport styles from './Login.module.css';\r\n\r\nfunction Login() {\r\n\r\n  const passwordInputRef = useRef(null);\r\n  const mostrarContraRef = useRef(null);\r\n  const emailRef = useRef(null);\r\n  const ingresarRef = useRef(null);\r\n  const formularioRef = useRef(null);  // Nueva referencia al formulario\r\n\r\n  // Definir las funciones fuera del useEffect\r\n  const mostrarContraseña = () => {\r\n    const passwordInput = passwordInputRef.current;\r\n    const mostrarContra = mostrarContraRef.current;\r\n\r\n    if (passwordInput.type === \"password\") {\r\n      passwordInput.type = \"text\";\r\n      mostrarContra.textContent = \"Ocultar\";\r\n    } else {\r\n      passwordInput.type = \"password\";\r\n      mostrarContra.textContent = \"Mostrar\";\r\n    }\r\n  };\r\n\r\n  const enviarDatos = () => {\r\n    const emailUsuario = emailRef.current.value;\r\n    const contraseñaUsuario = passwordInputRef.current.value;\r\n\r\n    var datos = {\r\n      email: emailUsuario,\r\n      contraseña: contraseñaUsuario\r\n    };\r\n\r\n    const inputs = formularioRef.current.getElementsByTagName(\"input\"); // Usar ref para el formulario\r\n\r\n    if (datosVacios(inputs) && validarDatos(inputs) && validarContraseña(contraseñaUsuario)) {\r\n      console.log('Todos los datos son correctos. Enviando datos...');\r\n\r\n      fetch('http://localhost:5500/login', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify(datos)\r\n      })\r\n        .then(response => {\r\n          if (!response.ok) {\r\n            throw new Error('La solicitud no fue exitosa');\r\n          }\r\n          return response.json();\r\n        })\r\n        .then(data => {\r\n          console.log('Respuesta de la API:', data);\r\n          window.location.href = 'http://localhost:3000/';\r\n        })\r\n        .catch(error => {\r\n          console.error('Error al enviar datos a la API:', error);\r\n          alert(\"El envío de datos a la API falló. Revise que los datos ingresados sean correctos\");\r\n        });\r\n    }\r\n  };\r\n\r\n  const datosVacios = (inputs) => {\r\n    for (var i = 0; i < inputs.length; i++) {\r\n      if (inputs[i].value.trim() === \"\") {\r\n        console.error(\"Hay campos vacios\");\r\n        alert(\"Por favor, llene todos los campos.\");\r\n        return false;\r\n      }\r\n    }\r\n    return true;\r\n  };\r\n\r\n  const validarDatos = (inputs) => {\r\n    var regex = /[,*()]/g;\r\n\r\n    for (var i = 0; i < inputs.length; i++) {\r\n      var inputValue = inputs[i].value.trim();\r\n\r\n      if (regex.test(inputValue)) {\r\n        console.error(\"El texto no puede contener los siguientes caracteres: '[', ']', '*', '(', ')'\");\r\n        alert(\"El texto no puede contener los siguientes caracteres: '[', ']', '*', '(', ')'\");\r\n        return false;\r\n      }\r\n    }\r\n\r\n    console.log(\"Todos los textos son válidos.\");\r\n    return true;\r\n  };\r\n\r\n  const validarContraseña = (contraseña) => {\r\n    var expresionRegular = /^[a-zA-Z0-9]{8,20}$/;\r\n\r\n    if (expresionRegular.test(contraseña)) {\r\n      console.log('La contraseña es válida.');\r\n      return true;\r\n    } else {\r\n      console.error('La contraseña no es válida. Debe contener solo letras y números, y tener entre 8 y 20 caracteres.');\r\n      alert('La contraseña no es válida. Debe contener solo letras y números, y tener entre 8 y 20 caracteres.');\r\n      return false;\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    const mostrarContra = mostrarContraRef.current;\r\n    const ingresarButton = ingresarRef.current;\r\n\r\n    // Añadir event listeners\r\n    mostrarContra.addEventListener(\"click\", mostrarContraseña);\r\n    ingresarButton.addEventListener(\"click\", enviarDatos);\r\n\r\n    // Quitar event listeners al desmontar\r\n    return () => {\r\n      mostrarContra.removeEventListener(\"click\", mostrarContraseña);\r\n      ingresarButton.removeEventListener(\"click\", enviarDatos);\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <div className={styles.login}>\r\n      {/* Fondo de la página */}\r\n      <div id={styles.fondo_2}></div>\r\n      <div id={styles.fondo_1}></div>\r\n\r\n      {/* Contenedor principal */}\r\n      <div className={styles.pantalla}>\r\n        <h1>INICIAR SESIÓN</h1>  {/* Título principal */}\r\n\r\n        {/* Formulario de inicio de sesión */}\r\n        <form id={styles.formulario} ref={formularioRef}> {/* Usar ref en el formulario */}\r\n          <input type=\"email\" id={styles.email} ref={emailRef} placeholder=\"INGRESA TU EMAIL\" /> {/* Campo para ingresar el email */}\r\n          <input type=\"password\" id={styles.contraseña} ref={passwordInputRef} placeholder=\"INGRESA TU CONTRASEÑA\" /> {/* Campo para ingresar la contraseña */}\r\n          <button type=\"button\" id={styles.mostrarContra} ref={mostrarContraRef}>Mostrar</button> {/* Botón para mostrar la contraseña */}\r\n          <a id={styles.olvido} href=\"#\">¿Olvidaste tu contraseña?</a> {/* Enlace para la página de recuperación de contraseña */}\r\n          <a id={styles.register} href=\"#\">¿No tenés cuenta? Registrate</a> {/* Enlace para la página de registro */}\r\n          <button type=\"button\" id={styles.ingresar} ref={ingresarRef}>Entrar</button> {/* Botón para iniciar sesión */}\r\n          <button type=\"button\" id={styles.google}>\r\n            <img src=\"/logo_google.jpg\" alt='makako' />\r\n            INGRESAR CON GOOGLE\r\n          </button>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Login;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}